---
# tasks file for hoplacloud.windows_rds_standalone

- name: Get DistinguishedName
  win_shell: (Get-ADDomain).DistinguishedName
  register: ad_domain
  changed_when: ad_domain.rc == 1

- name: Set fact ad_domain
  set_fact:
    ad_domain: "{{ ad_domain.stdout_lines[0] }}"

- name: Ensure Organizational Unit is present [1/2]
  win_shell: |
    $ou_check = (Get-ADOrganizationalUnit -Filter 'Name -like "RDS"').Name
    if ($ou_check -notlike "RDS"){New-ADOrganizationalUnit -Name "RDS" -Path "OU=servers,OU=ORGANIZATION,{{ ad_domain }}"}
  register: ad_ou_create
  changed_when: ("Change" in ad_ou_create.stdout)

- name: Ensure Organizational Unit is present [2/2]
  win_shell: |
    $ou_check = (Get-ADOrganizationalUnit -Filter 'Name -like "Office 365"').Name
    if ($ou_check -notlike "Office 365"){New-ADOrganizationalUnit -Name "Office 365" -Path "OU=ORGANIZATION,{{ ad_domain }}"}
  register: ad_ou_create
  changed_when: ("Change" in ad_ou_create.stdout)

- name: Ensure GG_USR_RDS is present
  win_domain_group:
    name: GG_USR_RDS
    scope: global
    path: "OU=Security groups,OU=ORGANIZATION,{{ ad_domain }}"

- name: Install Active Directory with sub features and management tools
  win_feature:
    name:
    - RDS-Licensing
    - RDS-Web-Access
    - RDS-Connection-Broker
    state: present
    include_sub_features: yes
    include_management_tools: yes

- name: Create directory scripts
  win_file:
    path: C:\scripts
    state: directory

- name: Check volume D
  win_shell: |
    if ((Get-Volume).DriveLetter -contains "D"){Write-Host OK}
  register: ad_volume_d
  changed_when: false

- name: Create directory profiles
  win_file:
    path: D:\profiles
    state: directory
  when: ("OK" in ad_volume_d.stdout)

- name: Add profiles share
  win_share:
    name: profiles$
    description: Users disks profiles share
    path: D:\profiles\
    list: no
    full: GG_ADM_ALL
    read: Everyone
    change: Everyone
  when: ("OK" in ad_volume_d.stdout)

- name: Disable inherited ACE's profiles folder
  win_acl_inheritance:
    path: D:\profiles
    state: absent
  when: ("OK" in ad_volume_d.stdout)

- name: Add security profiles folder
  win_acl:
    path: D:\profiles
    user: GG_ADM_ALL
    rights: FullControl
    type: allow
    state: present
    inherit: ContainerInherit, ObjectInherit
    propagation: 'InheritOnly'
  when: ("OK" in ad_volume_d.stdout)

- name: Add security profiles folder
  win_acl:
    path: D:\profiles
    user: GG_USR_RDS
    rights: Traverse, ListDirectory, ReadAttributes, ReadExtendedAttributes, CreateDirectories
    type: allow
    state: present
    inherit: ContainerInherit, ObjectInherit
    propagation: 'InheritOnly'
  when: ("OK" in ad_volume_d.stdout)

- name: Add security profiles folder
  win_acl:
    path: D:\profiles
    user: CREATOR OWNER
    rights: FullControl
    type: allow
    state: present
    inherit: ContainerInherit, ObjectInherit
    propagation: 'InheritOnly'
  when: ("OK" in ad_volume_d.stdout)

- name: Ensure GPO RDS_SERVERS is present
  win_shell: |
    $gpo_check = (Get-GPO -all ).DisplayName
    if ($gpo_check -notcontains "_RDS_SERVERS"){
    New-GPO -Name "_RDS_SERVERS"
    Write-Host Change
    }
  register: ad_gpo_rds_servers_create
  changed_when: ("Change" in ad_gpo_rds_servers_create.stdout)

- name: Ensure GPO RDS_USERS is present
  win_shell: |
    $gpo_check = (Get-GPO -all ).DisplayName
    if ($gpo_check -notcontains "_RDS_USERS"){
    New-GPO -Name "_RDS_USERS"
    Write-Host Change
    }
  register: ad_gpo_rds_users_create
  changed_when: ("Change" in ad_gpo_rds_users_create.stdout)

- name: Ensure GPO RDS_SERVERS is linked
  win_shell: |
    [xml]$gpoReport = Get-GPOReport -Name _RDS_SERVERS -ReportType xml
    if ($gpoReport.GPO.LinksTo.Enabled -notlike "true"){
    new-GPLink -Name "_RDS_SERVERS" -Target "OU=RDS,OU=Servers,OU=ORGANIZATION,{{ ad_domain }}" -LinkEnabled Yes
    Write-Host Change
    }
  register: ad_gpo_rds_servers_link_create
  changed_when: ("Change" in ad_gpo_rds_servers_link_create.stdout)

- name: Ensure GPO RDS_USERS is linked
  win_shell: |
    [xml]$gpoReport = Get-GPOReport -Name _RDS_USERS -ReportType xml
    if ($gpoReport.GPO.LinksTo.Enabled -notlike "true"){
    new-GPLink -Name "_RDS_USERS" -Target "OU=Users,OU=ORGANIZATION,{{ ad_domain }}" -LinkEnabled Yes
    Write-Host Change
    }
  register: ad_gpo_rds_users_link_create
  changed_when: ("Change" in ad_gpo_rds_users_link_create.stdout)

- name: Copy ADMX FSlogix Files [1/2]
  win_copy:
    src: fslogix.admx
    dest: C:\Windows\PolicyDefinitions\fslogix.admx

- name: Copy ADMX FSlogix Files [2/2]
  win_copy:
    src: fslogix.adml
    dest: C:\Windows\PolicyDefinitions\en-US\fslogix.adml

- name: Copy Associations Files [2/2]
  win_copy:
    src: FilesAssociations.xml
    dest: C:\Windows\SYSVOL\domain\scripts\FilesAssociations.xml

- name: Set GPO options "_RDS_SERVERS"
  win_shell: |
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\Software\Policies\Google\Chrome\ExtensionInstallForcelist" -ValueName "1" -Type string  -Value "klbibkeccnjlkjkiokjodocebajanakg;https://clients2.google.com/service/update2/crx"
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\Software\Policies\Microsoft\Windows\Server\ServerManager" -ValueName "DoNotOpenAtLogon" -Type DWORD  -Value 1
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\Software\Policies\Microsoft\Windows\System" -ValueName "DefaultAssociationsConfiguration" -Type string  -Value "\\{{ ansible_hostname }}\NETLOGON\FilesAssociations.xml"
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SYSTEM\ControlSet001\Services\AdobeARMservice" -ValueName "Start" -Type DWORD  -Value 4
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SYSTEM\ControlSet001\Services\WSearch" -ValueName "Start" -Type DWORD  -Value 2
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -ValueName "AdobeAAMUpdater-1.0" -Disable
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -ValueName "AdobeGCInvoker-1.0" -Disable
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -ValueName "MmsMonitor.exe" -Disable
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run" -ValueName "SunJavaUpdateSched" -Disable
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run" -ValueName "Acrobat Assistant 8.0" -Disable
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run" -ValueName "AcronisTibMounterMonitor" -Disable
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run" -ValueName "Acronis Scheduler2 Service" -Disable
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\Policies\Google\Chrome" -ValueName "ChromeCleanupEnabled" -Type DWORD  -Value 0
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\Policies\Google\Chrome" -ValueName "ChromeCleanupReportingEnabled" -Type DWORD  -Value 0
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\FSLogix\Profiles" -ValueName "Enabled" -Type DWORD  -Value 1
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\FSLogix\Profiles" -ValueName "IsDynamic" -Type DWORD  -Value 1
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\FSLogix\Profiles" -ValueName "RoamSearch" -Type DWORD  -Value 2
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\FSLogix\Profiles" -ValueName "SizeInMBs" -Type DWORD  -Value 10240
    Set-GPRegistryValue -Name "_RDS_SERVERS" -Key "HKLM\SOFTWARE\FSLogix\Profiles" -ValueName "VHDLocations" -Type String  -Value "\\{{ ansible_hostname }}\profiles$"

- name: Set GPO options "_RDS_USERS"
  win_shell: |
    Set-GPRegistryValue -Name "_RDS_USERS" -Key "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -ValueName "Adobe Acrobat Synchronizer" -Disable
    Set-GPRegistryValue -Name "_RDS_USERS" -Key "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -ValueName "Adobe Reader Synchronizer" -Disable
    Set-GPRegistryValue -Name "_RDS_USERS" -Key "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -ValueName "CCXProcess" -Disable
    Set-GPRegistryValue -Name "_RDS_USERS" -Key "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" -ValueName "com.squirrel.Teams.Teams" -Disable
    Set-GPRegistryValue -Name "_RDS_USERS" -Key "HKCU\Software\Microsoft\Office\16.0\Common\Identity" -ValueName "DisableADALatopWAMOverride" -Type DWORD  -Value 1
