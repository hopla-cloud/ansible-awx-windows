---
- name: Get offlines volumes id
  win_shell: |
    $disks=(get-disk | Where-Object OperationalStatus -eq "Offline").SerialNumber
    write-host $disks
  register: vol_offline_id
  changed_when: false

- name: Creation de la list des volumes attaches
  set_fact:
    search_filer: "{{ ansible_hostname|lower }}_filer"
    search_profiles: "{{ ansible_hostname|lower }}_profiles"
    vol_attach: "{{ hostvars['localhost'].volumes_list2 | dict2items | selectattr('key', 'match', ansible_hostname|lower) | list | items2dict }}"

- name: Recherche des types de volumes
  set_fact:
    vol_filer: "{{ vol_attach | dict2items | selectattr('key', 'match', search_filer) | list }}"
    vol_profiles: "{{ vol_attach | dict2items | selectattr('key', 'match', search_profiles) | list }}"
#    vol_profiles: "{{ vol_attach | dict2items | selectattr('key', 'match', search_profiles) | list | items2dict }}"

- name: Recuperation de l'ID des volumes par types
  set_fact:
    vol_filer: "{{ vol_filer[0].value }}"
    vol_profiles: "{{ vol_profiles[0].value }}"
  when: (vol_filer or vol_profiles)

- name: Mount filer volumes
  win_shell: |
    $disk=(get-disk | Where-Object SerialNumber -eq "{{vol_filer}}")
    $disk | Set-Disk -IsOffline $False
    $disk | Initialize-Disk -PartitionStyle GPT
    $disk | New-Partition -UseMaximumSize -DriveLetter "F" | Format-Volume
    $disk | -DriveLetter F -NewFileSystemLabel "Filer"
    Write-Host Change
    }
  register: vol_filer_mount
  changed_when: ("Change" in vol_filer_mount.stdout)
  when: vol_filer in vol_offline_id.stdout

#- name: Mount all offlines volumes
#  win_shell: |
#    $off_disk=(Get-Disk | Where-Object OperationalStatus -eq "Offline")
#    if ($off_disk){
#    $off_disk | Set-Disk -IsOffline $False
#    $off_disk | Initialize-Disk -PartitionStyle GPT
#    $off_disk | New-Partition -UseMaximumSize -AssignDriveLetter | Format-Volume
#    Write-Host Change
#    }
#  register: ad_volumes_init
#  changed_when: ("Change" in ad_volumes_init.stdout)
